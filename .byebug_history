continue
yield
continue
next
yield
yield(:articles_content)
continue
content_for?(:content)
:content
continue
yield
:content
content_for?(:articles_content)
next
continue
yield
content_for?(:articles_content)
@article
continue
posted_at.is_a?(ActiveSupport::TimeWithZone)
posted_at.is_a?
posted_at.is_a
posted_at.class
posted_at
continue
body
continue
next
step
parameters[3]
parameters
exit
"totati".index("to") == 0
"totati".index("to")
a = *params[:aktion]
a = params
a = *params
*params[:aktion]
*params
continue
params[:aktion]
exit
aktion_date = Date.new aktion["aktion_date(1i)"].to_i, aktion["aktion_date(2i)"].to_i, aktion["aktion_date(3i)"].to_i
aktion
aktion = params[:aktion]
params[:aktion].sort.map(&:last).map(&:to_i)
params[:aktion].sort.map(&:last)
params[:aktion].sort
Date.civil(*params[:aktion].sort.map(&:last).map(&:to_i))
*parDate.civil(*params[:event].sort.map(&:last).map(&:to_i))ams[:aktion]
*params[:aktion]
*params[:aktion].sort
*params[:aktion].sort.map(&:last).map(&:to_i)
params[:aktion]["aktion_date*"]
params[:aktion]
continue
exit
break
continue
single_views
continue
flash.notice
flash.ntocie
flash
flash.each { |type| p type  }
flash.each { |type| p.type  }
flash.select { |type| %i(alert notice).include?(type) }
flash
continue
flash
continue
yield
content_for?(:content)
:content
continue
f
f.has_many
continue
locale
continue
locale
continue
picturizable_type
picturizings
continue
items_with_title
medias_by_media_container_ids
media_container_ids_by_element_id
continue
@actions_for_home_page[3]
@actions_for_home_page[2]
@actions_for_home_page[1]
continue
@actions_for_home_page
continue
portrait
continue
locale
continue
locale
continue
locale
continue
@country.title
@country.name
next
continue
I18n.locale
next
params
I18n.locale
continue
I18n.locale
continue
I18n.locale
continue
locale_action_translations
next
locale_article_translations
next
category_with_articles_and_actions.actions
category_with_articles_and_actions.articles
category_with_articles_and_actions
continue
Article::Translation.where(locale: "en", article_id: category_with_articles_and_actions.articles.map { |a| a.id })conti
Article::Translation.where(locale: "en", article_id: category_with_articles_and_actions.articles.map { |a| a.id })
Article::Translation.where(locale: "en", article_id: [2, 4, 17, 10, 12, 16, 7, 13, 6])
Article::Translation.where(article_id: [2, 4, 17, 10, 12, 16, 7, 13, 6])
category_with_articles_and_actions.articles.map { |a| a.id }
locale
Article::Translation.where("locale = ? AND article_id = ?", locale || I18n.default_locale,category_with_articles_and_actions.articles.map { |a| a.id })
continue
Article::Translation.where(locale: locale || I18n.default_locale and article_id: category_with_articles_and_actions.articles.map { |a| a.id })
Article::Translation.where(locale: locale).find(category_with_articles_and_actions.articles.map { |a| a.id })
Article::Translation.where(locale: locale)
locale
continue
locale
category_with_articles_and_actions.articles
category_with_articles_and_actions
continue
step
@category.articles
@category
continue
category_with_articles_and_actions
Article::Translation.where(locale: locale)
next
locale
continue
next
locale
continue
I18n.locale
continue
next
step
continue
available_locale
I18n.available_locales
available_locale != I18n.locale
continue
available_locale != I18n.locale
continue
available_locale != I18n.locale
available_locale
continue
available_locale
next
available_locale
I18n.available_locales
continue
article_picture
continue
ArticlePicture.find(article_picture.fetch('id'))
continue
article_picture['article_id']
article_picture.fetch('article_id')
article_picture
continue
next
article_picture['media_container_id']
continue
article_picture
continue
next
continue
@article_pictures_to_update
continue
@article_pictures_to_create
@article_pictures_to_create.empty?
continue
@article_update_form.article
@article_update_form
next
self
from_mod
const_name
next
step
article_pict.fetch('stored_file_id') == media_file.keys[0].to_i
article_pict.has_key?('stored_file_id')
article_pict
step
media_file
step
article_pictures
media_files
continue
params
continue
media_containers_data
media_container_data
continue
media_container_data
continue
media_container_data
continue
media_files
stored_file
@article_pictures_to_update_without_media_file
@article_pictures_to_update_with_media_file
@article_pictures_to_create.empty?
@article_pictures_to_update
continue
@article_pictures_to_create
@article_pictures_to_update_with_media_file
@article_pictures_to_update_without_media_file
continue
next
continue
next
article_pictures
@article_pictures_to_update_without_media_file
next
article_picture
step
@article_pictures_to_update_without_media_file
step
@article_pictures_to_update_without_media_file
step
@article_pictures_to_update_without_media_file
next
@article_pictures_to_update_without_media_file
article_picture
next
article_picture
step
article_picture
step
@article_pictures_to_update
step
@existing_article_picture_ids.include?(article_picture["id"])
next
article_picture
continue
